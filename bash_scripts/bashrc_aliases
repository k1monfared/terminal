#!/bin/bash

# inistal setup

## define bashscripts folder address in the ~/.bashrc and then source this file there. e.g.
### bashscripts="/home/$USER/bash_scripts"
### source "$bashscripts/bashrc_aliases"
### export PATH="$PATH:$bashscripts"

## to access this file without looking for it every time
alias aliases_edit="pulsar $bashscripts/bashrc_aliases &"
alias aliases_list="cat $bashscripts/bashrc_aliases"

## load private info
export bashscripts
source $bashscripts/bashrc.private
export audiobooks_folder
export public_notes_folder
export private_notes_folder
export memory_address
export git_username

# system

## solving ibus access problem
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

## hibernation
alias hib='sudo systemctl hibernate'

## shortcuts
alias search="sh $bashscripts/duckduckgo.sh"
alias contacts="sh $bashscripts/contacts.sh"
alias mic="sh $bashscripts/record.sh"
alias organize="sh $bashscripts/organize_photos_monthly_this_folder.sh"
alias jnb="jupyter notebook"
alias cb="sh $bashscripts/copy_file_to_clipboard.sh"

# todo.txt
export TODOTXT_DEFAULT_ACTION=ls
export TODOTXT_SORT_COMMAND='env LC_COLLATE=C sort -k 2,2 -k 1,1n'
alias t='/home/$USER/opt/todo.txt_cli-2.12.0/todo.sh'
complete -F _todo t

# apt
alias ins="sudo apt install"
alias upd="sudo apt update"
alias upg="sudo apt upgrade -y"
alias remove="sudo apt remove"

# note
alias note="sh $bashscripts/note.sh"
alias n="sh $bashscripts/quicknote.sh"
alias ln="sh $bashscripts/lastnote.sh"
alias drafts="sh $bashscripts/searchdrafts.sh"
pn () # automatically open a public note in the editor
{
    file=$1
    pulsar $HOME/public/notes/$file
}
pvn () # automatically open a private note in the editor
{
    file=$1
    pulsar $HOME/Documents/notes/$file
}

# github
alias git_switch="sh $bashscripts/git_switch.sh"
alias git_who="cat /home/$USER/opt/git_config/active_git_account"
git_init ()
{
    cwd=$(basename "$(pwd)")
    git init &&
    git add --all &&
    git commit -m "Initial commit" &&
    gh repo create "$cwd" --private
    git push --set-upstream origin main
}
git_push_all ()
{
    message=$*
    if [[ $(echo $message) ]]; then
        message=$message
    else
        message="quick commit"
    fi
    git status && git add --all && git commit -m "$message" && git push
}
git_activate ()
{
    echo $1 > "/home/$USER/opt/git_config/active_git_account"
}
git_clone ()
{
    # get the active git account name
    #account=$(<"/home/$USER/opt/git_config/active_git_account")
    account=$1
    git_link=$2
    # get everything from the first colon
    sublink=$(echo $git_link |
        sed 's/^[^:]*[:]//')
    # get repo name
    repo=$(echo $sublink |
        sed 's/.*\///')
    repo=${repo%.*}
    git clone git@${account}:$sublink &&
    cd $repo &&
    git_switch $account
}

## github gist
alias gist="sh $bashscripts/gist.sh"
alias gistp="sh $bashscripts/publicgist.sh"
alias gg="sh $bashscripts/quickgist.sh"

# solving ibus access problem
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus


# libarary
alias libby="$bashscripts/overdrive/overdrive.sh download"
alias libby_list="ls -t /home/$USER/Downloads | grep \.odm\$ > /tmp/libby_list && cat -n /tmp/libby_list"
libby_get ()
{
    book_name=$(sed -n $1p /tmp/libby_list)
    libby "/home/$USER/Downloads/$book_name"
}


# vpn
## proton
alias ppn="protonvpn-cli"


# terminal helpers
## capture the output of a command so it can be retrieved with ret
cap () { tee /tmp/capture.out; }
## return the output of the most recent command that was captured by cap
ret () { cat /tmp/capture.out; }


# passowrds
## bitwarden
alias bw="$HOME/opt/bw"
alias bwc="$bashscripts/bwc"
alias bwu='export BW_SESSION="$(bw unlock --raw)"'
alias bwl='export BW_SESSION='

## enc/dec
enc ()
{
    file=$*
    gpg --output "$file.enc" --symmetric --cipher-algo AES256 "$file"
}

dec ()
{
    file=$*
    gpg --output "$file.dec" --decrypt "$file"
}
